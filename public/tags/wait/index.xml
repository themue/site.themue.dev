<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wait on Embrace Change, Shape the Future</title>
    <link>//localhost:1313/tags/wait/</link>
    <description>Recent content in Wait on Embrace Change, Shape the Future</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Mar 2022 22:25:00 +0100</lastBuildDate>
    <atom:link href="//localhost:1313/tags/wait/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tideland Go Wait v0.2.0</title>
      <link>//localhost:1313/posts/2022/03/05/tideland-go-wait-v0.2.0/</link>
      <pubDate>Sat, 05 Mar 2022 22:25:00 +0100</pubDate>
      <guid>//localhost:1313/posts/2022/03/05/tideland-go-wait-v0.2.0/</guid>
      <description>The package Tideland Go Wait reached v0.2.0 due to a new added feature. It now contains the type Throttle to provide a limited processing of events per second, e.g. for web handlers. The events are simple closures or functions with a given signature. The limit and a burst size for the maximum number of events during one call are defined at throttle creation.&#xA;Example A throttled wrapper of a http.Handler.</description>
    </item>
    <item>
      <title>Migrated Go Actor and Go Wait</title>
      <link>//localhost:1313/posts/2021/09/08/migrated-go-actor-and-go-wait/</link>
      <pubDate>Wed, 08 Sep 2021 21:11:00 +0100</pubDate>
      <guid>//localhost:1313/posts/2021/09/08/migrated-go-actor-and-go-wait/</guid>
      <description>As described a few days ago, I am migrating individual packages of the Tideland libraries to own repositories. Iâ€™ve described my motivation for this before. In the meantime, two more packages have been migrated to the main level: Tideland Go Actor and Tideland Go Wait.&#xA;The package Tideland Go Actor pursues the idea to realize concurrency in Go not only via CSP, but with the Actor Model. It picks up the concept of the Erlang/OTP module gen_server.</description>
    </item>
  </channel>
</rss>
