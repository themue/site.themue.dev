<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functions on Embrace Change, Shape the Future</title>
    <link>//localhost:1313/tags/functions/</link>
    <description>Recent content in Functions on Embrace Change, Shape the Future</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 May 2022 22:10:00 +0200</lastBuildDate>
    <atom:link href="//localhost:1313/tags/functions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Talk about declarative APIs</title>
      <link>//localhost:1313/posts/2022/05/06/talk-about-declarative-apis/</link>
      <pubDate>Fri, 06 May 2022 22:10:00 +0200</pubDate>
      <guid>//localhost:1313/posts/2022/05/06/talk-about-declarative-apis/</guid>
      <description>As you know, I from time to time have the chance to give a talk about an interesting topic. Sometimes it&amp;rsquo;s pretty close to my work, sometimes it&amp;rsquo;s just inspired by my own ideas. In this case it&amp;rsquo;s a mix.&#xA;The conference this time had been the betterCode() API on 27.04.2022. Here I had the talk &amp;ldquo;Let the computer do it - Usage of declarative APIs&amp;rdquo;. It describes the troubles of today usual imperative APIs and how to use them in a declarative way.</description>
    </item>
    <item>
      <title>Talks on GoDays 2020</title>
      <link>//localhost:1313/posts/2019/11/20/talks-on-godays-2020/</link>
      <pubDate>Wed, 20 Nov 2019 16:00:00 +0100</pubDate>
      <guid>//localhost:1313/posts/2019/11/20/talks-on-godays-2020/</guid>
      <description>In January 21 to 23, 2020 are the next GoDays in Berlin, Germany. And I hope it will be a great conference for all Gophers again like it has been this year too.&#xA;While being a passive visitor last time I&amp;rsquo;ll be active with two slots this time:&#xA;First one will be a workshop from 9:00 am to 5:00 pm on 21st together with Nico Schieder and Indradhanush Gupta. We&amp;rsquo;ll introduce you in Kubernetes as platform for own components, because it can do more than deploy and manage containers.</description>
    </item>
    <item>
      <title>Enjoy functions</title>
      <link>//localhost:1313/posts/2019/05/16/enjoy-functions/</link>
      <pubDate>Thu, 16 May 2019 23:01:00 +0100</pubDate>
      <guid>//localhost:1313/posts/2019/05/16/enjoy-functions/</guid>
      <description>What shall be special when working with functions? They are part of software development almost since beginning, there&amp;rsquo;s even the paradigm of functional programming. So what&amp;rsquo;s special with functions in Go? Simple answer: nothing. But true to the motto of the language the work with functions and their relatives, the methods, is very pragmatic. And so they get parts of elegant solutions.&#xA;Let&amp;rsquo;s start with quite simple functions. They can be small, having none, one, more or a variable number of parameters.</description>
    </item>
  </channel>
</rss>
